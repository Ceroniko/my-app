{"version":3,"sources":["serviceWorker.js","home/Home.js","testing/Testing.js","test/Test.js","result/Result.js","app/App.js","output/Output.js","results/Results.js","routing/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","props","react_default","a","createElement","className","react_router_dom","to","Testing","data","map","item","index","key","concat","theme","Test","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showAnswers","answers","onClick","elem","updateData","style","document","getElementsByClassName","i","length","classList","remove","target","setAttribute","setState","String","fromCharCode","state","t","j","Math","floor","random","nextProps","_this2","question","nextTest","React","Component","Result","localStorage","setItem","sum","arrayRightAnswer","Date","toLocaleString","year","month","day","hour","minute","second","end","time","end2","setTime","repeatTest","App","value","userAnswer","arrayAnswer","date","prevState","toConsumableArray","params","id","questions","rigthAnswer","arrayQuestions","src_test_Test","result","res","split","width","borderBottom","Results","push","getItem","Output_Result","Root","react_router","exact","path","component","ReactDOM","render","routing_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.422a7883.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. app is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <div className=\"Home-page\">\r\n            <button><Link to={'/testing'} className={'greeting-button'}>Начать проходить тесты!</Link></button>\r\n            <button><Link to={'/results'} className={'greeting-button'}>Посмотреть свои результаты</Link></button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport data from '../test.json';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Testing = () => {\r\n    const showTheme = () => {\r\n        return data.map((item, index) => {\r\n            return  <Link key={index} to={`/testing/${index}`}>{item.theme}</Link>;\r\n        })\r\n    };\r\n\r\n    return(\r\n        <div className=\"allTest\">\r\n            <p>Выберите тему</p>\r\n            <div>{showTheme()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Testing;","import React from 'react';\r\nimport './Test.css';\r\n\r\nclass Test extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            onClick : false\r\n        }\r\n    }\r\n\r\n\r\n     componentWillMount(){\r\n         for ( var i = this.props.answers.length-1; i>0; i--) {\r\n             var t = this.props.answers[i],\r\n                 j = Math.floor(i*Math.random());\r\n             this.props.answers[i] = this.props.answers[j];\r\n             this.props.answers[j] = t;\r\n         }\r\n     }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        if (this.props.answers !== nextProps.answers) {\r\n            for ( var i = nextProps.answers.length-1; i>0; i--) {\r\n                var t = nextProps.answers[i],\r\n                    j = Math.floor(i*Math.random());\r\n                nextProps.answers[i] = nextProps.answers[j];\r\n                nextProps.answers[j] = t;\r\n            }\r\n        }\r\n    }\r\n\r\n     showAnswers = () => {\r\n        return this.props.answers.map((item, index) =>  <p key={index} onClick={(elem)=>{this.props.updateData(item)\r\n            var style = document.getElementsByClassName('style1');\r\n            for (var i = 0; i < style.length; i++){\r\n                style[i].classList.remove('style1')\r\n            }\r\n            elem.target.setAttribute(\"class\", \"style1\");\r\n            this.setState({onClick : true});\r\n        }}><span>{String.fromCharCode(65 + index,41,32)}</span>{item}</p>);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"all-test\">\r\n                <h3>{this.props.question}</h3>\r\n                <div>\r\n                    {this.showAnswers()}\r\n                    { this.state.onClick ? <button onClick={() => {\r\n                        this.props.nextTest()\r\n                        var style = document.getElementsByClassName('style1');\r\n                        for (var i = 0; i < style.length; i++){\r\n                            style[i].classList.remove('style1')\r\n                        }\r\n                        this.setState({onClick : false})\r\n                    }}>Следующий вопрос\r\n                    </button> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Result(props) {\r\n    var options1 = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    };\r\n    localStorage.setItem('Результат - ' + (localStorage.length + 1), [(props.sum*100)/props.arrayRightAnswer.length,new Date().toLocaleString(\"ru\", options1),props.theme]);\r\n    var end = new Date();\r\n    end -= props.time;\r\n    var end2 = new Date();\r\n    end2.setTime(-10800000+end);\r\n    var options = {\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    };\r\n    return (\r\n        <div className=\"result\">\r\n            <p>Вы ответили на {props.sum} {props.sum>=11 && props.sum<=19 ? \"вопросов\" :\r\n                                              (props.sum % 10) === 0 || ((props.sum % 10)>=5 && (props.sum % 10)<=9) ? \"вопросов\" :\r\n                                                  ((props.sum % 10)>=2 && (props.sum % 10)<=4) ? \"вопроса\" : \"вопрос\"} из {props.arrayRightAnswer.length} </p>\r\n            {(props.sum*100)/props.arrayRightAnswer.length > 55.5 ? <p>Поздравляем! Вы успешно сдали тест, и набрали {(props.sum*100)/props.arrayRightAnswer.length}%</p> : <p>Вы не справились, и набрали всего {(props.sum*100)/props.arrayRightAnswer.length}%.</p>}\r\n            <p>Время прохождения теста: {end2.toLocaleString(\"ru\", options) }</p>\r\n            <button><Link to={'/testing'} className={'greeting-button'}>Выбрать новую тему для тестирования</Link></button>\r\n            <button><Link to={'/'} className={'greeting-button'}>Вернуться на главную</Link></button>\r\n            <button onClick={() => {props.repeatTest()}}>Пройти тест еще раз</button>\r\n            <button><Link to={'/results'} className={'greeting-button'}>Посмотреть результаты</Link></button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport data from '../test.json';\nimport Test from '../test/Test';\nimport Result from '../result/Result';\n\nclass App extends React.Component {\n    constructor(props){\n       super(props);\n\n       this.state = {\n           index : 0,\n           arrayAnswer : [],\n           arrayRightAnswer : [],\n           arrayQuestions : [],\n           userAnswer : \"\",\n           sum : 0,\n           date : null\n       }\n    }\n\n    componentDidMount() {\n        this.setState({date : new Date()})\n    }\n\n    componentWillMount(){\n        var questions = data[this.props.match.params.id].questions;\n        for ( var i = questions.length; i-->0;) {\n            var t = questions[i],\n                j = Math.floor(i*Math.random());\n            questions[i] = questions[j];\n            questions[j] = t;\n        }\n        this.setState({arrayQuestions : questions});\n    }\n\n    render() {\n        return this.state.index < this.state.arrayQuestions.length ?\n            < Test question={this.state.arrayQuestions[this.state.index].question} answers={this.state.arrayQuestions[this.state.index].answers} updateData={this.updateData} nextTest={this.nextTest}/> :\n            < Result sum={this.state.sum} arrayRightAnswer={this.state.arrayRightAnswer} time={this.state.date} repeatTest={this.repeatTest} theme={data[this.props.match.params.id].theme}/>;\n    }\n\n    updateData = (value) => {\n        this.setState({userAnswer : value});\n    };\n\n    repeatTest = () => {\n        this.setState({\n                                index : 0,\n                                arrayAnswer : [],\n                                arrayRightAnswer : [],\n                                userAnswer : \"\",\n                                sum : 0,\n                                date : null\n                            })\n        this.setState({date : new Date()})\n    }\n\n    nextTest = () => {\n        this.setState(prevState => ({\n            arrayAnswer: [...prevState.arrayAnswer, this.state.userAnswer]\n        }));\n        this.setState(prevState => ({\n            arrayRightAnswer: [...prevState.arrayRightAnswer, data[this.props.match.params.id].questions[this.state.index].rigthAnswer]\n        }));\n        if (this.state.userAnswer === data[this.props.match.params.id].questions[this.state.index].rigthAnswer) this.setState ({sum : this.state.sum + 1})\n        this.setState({index : this.state.index + 1});\n    }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nexport default function Result(props) {\r\n    return props.result.map((item, index) => {\r\n        var  res = item.split(',');\r\n        return(\r\n            <div className=\"result\" key={index}>\r\n                <p>{res[3]}</p>\r\n                <p>{res[0]}</p>\r\n                <p>{res[1]+res[2]}</p>\r\n                <p style={\r\n                    {\r\n                    width: '100%',\r\n                    borderBottom:'1px solid black'}\r\n                }> </p>\r\n            </div>\r\n        )\r\n    })\r\n}","import React from \"react\";\r\nimport Output from \"../output/Output\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Results extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            result : [''],\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        var res = [];\r\n        for (let i = localStorage.length; i >= 1; i--){\r\n            res.push(localStorage.getItem('Результат - ' + i));\r\n        }\r\n        this.setState({result : res});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <Output result={this.state.result}/>\r\n                <button><Link to={'/'}>На главную</Link></button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from '../home/Home.js';\r\nimport Testing from '../testing/Testing';\r\nimport App from '../app/App.js';\r\nimport Results from '../results/Results';\r\n\r\n\r\nconst Root = () => (\r\n        <Router>\r\n            <div id={'router-wrapper'}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component = {Home} />\r\n                    <Route exact path='/testing/:id' component = {App}/>\r\n                    <Route path=\"/testing\" component = {Testing} />\r\n                    <Route path=\"/results\" component = {Results} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n);\r\n\r\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Root from './routing/Root.js'\n\nReactDOM.render(< Root/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}