{"version":3,"sources":["serviceWorker.js","home/Home.js","testing/Testing.js","test/Test.js","result/Result.js","app/App.js","output/Output.js","results/Results.js","routing/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","props","react_default","a","createElement","className","react_router_dom","to","Testing","style","fontWeight","id","data","map","item","index","key","concat","theme","position","bottom","right","width","Test","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showAnswers","answers","onClick","elem","updateData","document","getElementsByClassName","i","length","classList","remove","target","setAttribute","setState","onConfirm","userAnswer","String","fromCharCode","state","t","j","Math","floor","random","nextProps","getElementById","length1","round","_this2","question","nextTest","elems","getElementsByTagName","pointerEvents","style1","rightAnswer","add","textContent","role","data-tooltip","aria-valuemin","aria-valuemax","React","Component","Result","localStorage","setItem","sum","arrayRightAnswer","Date","toLocaleString","year","month","day","hour","minute","second","end","time","end2","setTime","src","heigth","alt","marginTop","repeatTest","App","value","arrayAnswer","date","progress","arrayQuestions","prevState","toConsumableArray","trim","params","questions","rigthAnswer","src_test_Test","Result_Result","result","res","split","console","log","borderBottom","Results","push","getItem","Output_Result","Root","react_router","exact","path","component","ReactDOM","render","routing_Root","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6VAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,mFCdS,SAASC,EAAKC,GACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGXH,EAAAC,EAAAC,cAAA,UAAQC,UAAW,mBAAmBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAAV,gIACtCL,EAAAC,EAAAC,cAAA,UAAQC,UAAW,mBAAmBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAAV,mKCkBnCC,SAvBC,WAOZ,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIK,MAAO,CACPC,WAAa,SADjB,6EAGAR,EAAAC,EAAAC,cAAA,OAAKO,GAAG,SAVLC,EAAKC,IAAI,SAACC,EAAMC,GACnB,OAAQb,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMU,IAAKD,EAAOR,GAAE,YAAAU,OAAcF,IAAUD,EAAKI,UAUzDhB,EAAAC,EAAAC,cAAA,UAAQC,UAAW,kBAAmBI,MAAO,CACzCU,SAAU,QACVC,OAAQ,MACRC,MAAO,MACPC,MAAO,QACRpB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,KAAV,6GCuFAgB,2BA1GX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QA+BHI,YAAc,WACX,OAAOP,EAAKvB,MAAM+B,QAAQnB,IAAI,SAACC,EAAMC,GAAP,OAAkBb,EAAAC,EAAAC,cAAA,KAAGY,IAAKD,EAAOkB,QAAS,SAACC,GAAQV,EAAKvB,MAAMkC,WAAWrB,GAEnG,IADA,IAAIL,EAAQ2B,SAASC,uBAAuB,UACnCC,EAAI,EAAGA,EAAI7B,EAAM8B,OAAQD,IAC9B7B,EAAM6B,GAAGE,UAAUC,OAAO,UAE9BP,EAAKQ,OAAOC,aAAa,QAAS,UAClCnB,EAAKoB,SAAS,CACUX,SAAU,EACVY,WAAY,EACZC,WAAahC,MAEtCZ,EAAAC,EAAAC,cAAA,YAAO2C,OAAOC,aAAa,GAAKjC,EAAM,GAAG,KAAYD,MAzCxDU,EAAKyB,MAAQ,CACThB,SAAU,EACVY,WAAY,EACZC,WAAa,IANRtB,oFAWR,IAAM,IAAIc,EAAIX,KAAK1B,MAAM+B,QAAQO,OAAO,EAAGD,EAAE,EAAGA,IAAK,CACjD,IAAIY,EAAIvB,KAAK1B,MAAM+B,QAAQM,GACvBa,EAAIC,KAAKC,MAAMf,EAAEc,KAAKE,UAC1B3B,KAAK1B,MAAM+B,QAAQM,GAAKX,KAAK1B,MAAM+B,QAAQmB,GAC3CxB,KAAK1B,MAAM+B,QAAQmB,GAAKD,+CAIbK,GAChB,GAAI5B,KAAK1B,MAAM+B,UAAYuB,EAAUvB,QACjC,IAAM,IAAIM,EAAIiB,EAAUvB,QAAQO,OAAO,EAAGD,EAAE,EAAGA,IAAK,CAChD,IAAIY,EAAIK,EAAUvB,QAAQM,GACtBa,EAAIC,KAAKC,MAAMf,EAAEc,KAAKE,UAC1BC,EAAUvB,QAAQM,GAAKiB,EAAUvB,QAAQmB,GACzCI,EAAUvB,QAAQmB,GAAKD,EAG/Bd,SAASoB,eAAe,QAAQ/C,MAAMa,MAAaK,KAAK1B,MAAMwD,QAAU,IACxErB,SAASoB,eAAe,QAAQb,aAAa,eAAqBS,KAAKM,MAAM/B,KAAK1B,MAAMwD,SAAW,sCAkB9F,IAAAE,EAAAhC,KACL,OACIzB,EAAAC,EAAAC,cAAA,OAAKO,GAAI,YACLT,EAAAC,EAAAC,cAAA,UAAKuB,KAAK1B,MAAM2D,UAChB1D,EAAAC,EAAAC,cAAA,WACKuB,KAAKI,cACJJ,KAAKsB,MAAMhB,UAAYN,KAAKsB,MAAMJ,UAAY3C,EAAAC,EAAAC,cAAA,UAAQK,MAAO,CAC/Da,MAAO,QACRjB,UAAW,yBAA0B4B,QAAS,WACzC0B,EAAK1D,MAAM4D,WAGX,IAFA,IACIC,EADM1B,SAASoB,eAAe,YAClBO,qBAAqB,KAC7BzB,EAAE,EAAGA,EAAEwB,EAAMvB,OAAQD,IACzBwB,EAAMxB,GAAG7B,MAAMuD,cAAgB,OAInC,IAFA,IAAIvD,EAAQ2B,SAASC,uBAAuB,UACxC4B,EAAS7B,SAASC,uBAAuB,UACpCC,EAAI,EAAGA,EAAI7B,EAAM8B,OAAQD,IAC9B7B,EAAM6B,GAAGE,UAAUC,OAAO,UAE9B,IAAK,IAAIH,EAAI,EAAGA,EAAI2B,EAAO1B,OAAQD,IAC/B2B,EAAO3B,GAAGE,UAAUC,OAAO,UAE/BkB,EAAKf,SAAS,CAACX,SAAU,MAjBmB,+FAmBpCN,KAAKsB,MAAMhB,SAAWN,KAAKsB,MAAMJ,UAAY3C,EAAAC,EAAAC,cAAA,UAAQK,MAAO,CACxEa,MAAO,QACRjB,UAAW,yBAA0B4B,QAAU,WAE1C,IADA,IAAIxB,EAAQ2B,SAASC,uBAAuB,UACnCC,EAAI,EAAGA,EAAI7B,EAAM8B,OAAQD,IACtBqB,EAAKV,MAAMH,aAAea,EAAK1D,MAAMiE,cACjCzD,EAAM6B,GAAGE,UAAU2B,IAAI,UACvB1D,EAAM6B,GAAGE,UAAUC,OAAO,WAK1C,IAFA,IACIqB,EADM1B,SAASoB,eAAe,YAClBO,qBAAqB,KAC7BzB,EAAE,EAAGA,EAAEwB,EAAMvB,OAAQD,IACzBwB,EAAMxB,GAAG7B,MAAMuD,cAAgB,OAC3BF,EAAMxB,GAAG8B,cAAiBrB,OAAOC,aAAa,GAAKV,EAAE,GAAG,IAAOqB,EAAK1D,MAAMiE,aAC1EJ,EAAMxB,GAAGK,aAAa,QAAS,UAIvCgB,EAAKf,SAAS,CAACC,WAAY,MAnB0B,uGAoBvB,MAEtC3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMI,MAAO,CACxBU,SAAU,QACVC,OAAQ,MACRC,MAAQ,QAERnB,EAAAC,EAAAC,cAAA,OAAKO,GAAG,OAAQN,UAAU,mBAAmBgE,KAAK,cAAcC,eAAa,MAAMC,gBAAc,IAAIC,gBAAc,OAAnH,gBApGDC,IAAMC,kBCCV,SAASC,EAAO1E,GAS3B2E,aAAaC,QAAQ,6DAAkBD,aAAarC,OAAS,GAAI,CAACa,KAAKM,MAAiB,IAAVzD,EAAM6E,IAAS7E,EAAM8E,iBAAiBxC,SAAQ,IAAIyC,MAAOC,eAAe,KARvI,CACXC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YAE0JtF,EAAMiB,QAC5K,IAAIsE,EAAM,IAAIR,KACdQ,GAAOvF,EAAMwF,KACb,IAAIC,EAAO,IAAIV,KACfU,EAAKC,SAAS,MAASH,GAMvB,OACItF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,uFAAmBH,EAAM6E,IAAzB,IAA+B7E,EAAM6E,KAAK,IAAM7E,EAAM6E,KAAK,GAAK,mDAC/B7E,EAAM6E,IAAM,KAAQ,GAAO7E,EAAM6E,IAAM,IAAK,GAAM7E,EAAM6E,IAAM,IAAK,EAAK,mDACnE7E,EAAM6E,IAAM,IAAK,GAAM7E,EAAM6E,IAAM,IAAK,EAAK,6CAAY,uCAF/F,iBAE6G7E,EAAM8E,iBAAiBxC,OAFpI,KAGY,IAAVtC,EAAM6E,IAAS7E,EAAM8E,iBAAiBxC,OAAS,KAAOrC,EAAAC,EAAAC,cAAA,mPAAkDgD,KAAKM,MAAiB,IAAVzD,EAAM6E,IAAS7E,EAAM8E,iBAAiBxC,QAApG,KAAoHrC,EAAAC,EAAAC,cAAA,qLAAsCgD,KAAKM,MAAiB,IAAVzD,EAAM6E,IAAS7E,EAAM8E,iBAAiBxC,QAAxF,MAChK,IAAVtC,EAAM6E,IAAS7E,EAAM8E,iBAAiBxC,OAAS,KAAOrC,EAAAC,EAAAC,cAAA,OAAKwF,IAAI,wDAAwDtE,MAAM,MAAMuE,OAAO,MAAMC,IAAI,KAAQ5F,EAAAC,EAAAC,cAAA,OAAKwF,IAAI,6DAA6DtE,MAAM,MAAMuE,OAAO,MAAMC,IAAI,KACjQ5F,EAAAC,EAAAC,cAAA,KAAGK,MAAO,CACNsF,UAAY,QADhB,qIAE6BL,EAAKT,eAAe,KAf/C,CACVI,KAAM,UACNC,OAAQ,UACRC,OAAQ,cAcJrF,EAAAC,EAAAC,cAAA,UAAQC,UAAW,mBAAmBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAAV,mMACtCL,EAAAC,EAAAC,cAAA,UAAQC,UAAW,mBAAmBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,KAAV,mHACtCL,EAAAC,EAAAC,cAAA,UAAQC,UAAW,yBAA0B4B,QAAS,WAAOhC,EAAM+F,eAAnE,uGACA9F,EAAAC,EAAAC,cAAA,UAAQC,UAAW,mBAAmBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAAV,mICqCnC0F,cApEX,SAAAA,EAAYhG,GAAM,IAAAuB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACfzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAM1B,KAqCTkC,WAAa,SAAC+D,GACV1E,EAAKoB,SAAS,CAACE,WAAaoD,KAvCd1E,EA0ClBwE,WAAa,WACTxE,EAAKoB,SAAS,CACU7B,MAAQ,EACRoF,YAAc,GACdpB,iBAAmB,GACnBjC,WAAa,GACbgC,IAAM,EACNsB,KAAO,OAE/B5E,EAAKoB,SAAS,CAACyD,SAAa,EAAE7E,EAAKyB,MAAMqD,eAAe/D,OAAQ,MAChEf,EAAKoB,SAAS,CAACwD,KAAO,IAAIpB,QApDZxD,EAuDlBqC,SAAW,WACPrC,EAAKoB,SAAS,SAAA2D,GAAS,MAAK,CACxBJ,YAAW,GAAAlF,OAAAQ,OAAA+E,EAAA,EAAA/E,CAAM8E,EAAUJ,aAAhB,CAA6B3E,EAAKyB,MAAMH,WAAW2D,YAElEjF,EAAKoB,SAAS,SAAA2D,GAAS,MAAK,CACxBxB,iBAAgB,GAAA9D,OAAAQ,OAAA+E,EAAA,EAAA/E,CAAM8E,EAAUxB,kBAAhB,CAAkCnE,EAAKY,EAAKvB,MAAMF,MAAM2G,OAAO/F,IAAIgG,UAAUnF,EAAKyB,MAAMlC,OAAO6F,YAAYH,YAE3HjF,EAAKyB,MAAMH,aAAelC,EAAKY,EAAKvB,MAAMF,MAAM2G,OAAO/F,IAAIgG,UAAUnF,EAAKyB,MAAMlC,OAAO6F,aAAapF,EAAKoB,SAAU,CAACkC,IAAMtD,EAAKyB,MAAM6B,IAAM,IAC/ItD,EAAKoB,SAAS,CAAC7B,MAAQS,EAAKyB,MAAMlC,MAAQ,IAC1CS,EAAKoB,SAAS,CAACyD,UAAc7E,EAAKyB,MAAMlC,MAAQ,GAAGS,EAAKyB,MAAMqD,eAAe/D,OAAQ,OA7DtFf,EAAKyB,MAAQ,CACTlC,MAAQ,EACRoF,YAAc,GACdpB,iBAAmB,GACnBuB,eAAiB,GACjBxD,WAAa,GACbgC,IAAM,EACNsB,KAAO,KACPC,SAAW,GAXA7E,mFAgBdG,KAAKiB,SAAS,CAACwD,KAAO,IAAIpB,OAC1BrD,KAAKiB,SAAS,CAACyD,UAAc1E,KAAKsB,MAAMlC,MAAQ,GAAGY,KAAKsB,MAAMqD,eAAe/D,OAAQ,mDAKrF,IADA,IAAIoE,EAAY/F,EAAKe,KAAK1B,MAAMF,MAAM2G,OAAO/F,IAAIgG,UACvCrE,EAAIqE,EAAUpE,OAAQD,KAAI,GAAI,CACpC,IAAIY,EAAIyD,EAAUrE,GACda,EAAIC,KAAKC,MAAMf,EAAEc,KAAKE,UAC1BqD,EAAUrE,GAAKqE,EAAUxD,GACzBwD,EAAUxD,GAAKD,EAEnBvB,KAAKiB,SAAS,CAAC0D,eAAiBK,qCAKhC,OAAOhF,KAAKsB,MAAMlC,MAAQY,KAAKsB,MAAMqD,eAAe/D,OAChDrC,EAAAC,EAAAC,cAAEyG,EAAF,CAAOjD,SAAUjC,KAAKsB,MAAMqD,eAAe3E,KAAKsB,MAAMlC,OAAO6C,SAAU5B,QAASL,KAAKsB,MAAMqD,eAAe3E,KAAKsB,MAAMlC,OAAOiB,QAASkC,YAAatD,EAAKe,KAAK1B,MAAMF,MAAM2G,OAAO/F,IAAIgG,UAAUhF,KAAKsB,MAAMlC,OAAO6F,YAAanD,QAAS9B,KAAKsB,MAAMoD,SAAUlE,WAAYR,KAAKQ,WAAY0B,SAAUlC,KAAKkC,WACtS3D,EAAAC,EAAAC,cAAE0G,EAAF,CAAShC,IAAKnD,KAAKsB,MAAM6B,IAAKC,iBAAkBpD,KAAKsB,MAAM8B,iBAAkBU,KAAM9D,KAAKsB,MAAMmD,KAAMJ,WAAYrE,KAAKqE,WAAY9E,MAAON,EAAKe,KAAK1B,MAAMF,MAAM2G,OAAO/F,IAAIO,eApCnKuD,IAAMC,iBCHT,SAASC,EAAO1E,GAC3B,OAAOA,EAAM8G,OAAOlG,IAAI,SAACC,EAAMC,GAC3B,IAAKiG,EAAMlG,EAAKmG,MAAM,KAEtB,OADAC,QAAQC,IAAIH,GAER9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUW,IAAKD,GAC1Bb,EAAAC,EAAAC,cAAA,SAAI,+CAAc4G,EAAI,IACtB9G,EAAAC,EAAAC,cAAA,SAAI,2DAAgB4G,EAAI,GAAK,KAC7B9G,EAAAC,EAAAC,cAAA,SAAI,kEAAkB4G,EAAI,GAAGA,EAAI,IACjC9G,EAAAC,EAAAC,cAAA,KAAGK,MACC,CACAa,MAAO,QACP8F,aAAa,sBAHjB,kBC0BDC,cAhCX,SAAAA,IAAa,IAAA7F,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0F,IACT7F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4F,GAAAvF,KAAAH,QAEKsB,MAAQ,CACT8D,OAAS,CAAC,KAJLvF,oFAUT,IADA,IAAIwF,EAAM,GACD1E,EAAIsC,aAAarC,OAAQD,GAAK,EAAGA,IACtC0E,EAAIM,KAAK1C,aAAa2C,QAAQ,4DAAiBjF,IAEnDX,KAAKiB,SAAS,CAACmE,OAASC,qCAIxB,OACI9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACoH,EAAD,CAAQT,OAAQpF,KAAKsB,MAAM8D,SAC3B7G,EAAAC,EAAAC,cAAA,UAAQC,UAAW,kBAAmBI,MAAO,CACzCU,SAAU,QACVC,OAAQ,MACRC,MAAO,MACPC,MAAO,QACRpB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,KAAV,oEA1BGkE,IAAMC,WCgBb+C,EAbF,kBACLvH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,OAAKO,GAAI,kBACLT,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACIxH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAa7H,IACnCE,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAa5B,IAC9C/F,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAarH,IACpCN,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAaR,QCPxDS,IAASC,OAAO7H,EAAAC,EAAAC,cAAE4H,EAAF,MAAU5F,SAASoB,eAAe,STyH5C,kBAAmByE,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0621b0ef.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. app is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <div className=\"Home-page\">\r\n            \r\n           \r\n            <button className={'greeting-button'}><Link to={'/testing'} >Начать проходить тесты!</Link></button>\r\n            <button className={'greeting-button'}><Link to={'/results'} >Посмотреть свои результаты</Link></button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport data from '../test.json';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Testing.css';\r\n\r\nconst Testing = () => {\r\n    const showTheme = () => {\r\n        return data.map((item, index) => {\r\n            return  <Link key={index} to={`/testing/${index}`}>{item.theme}</Link>;\r\n        })\r\n    };\r\n\r\n    return(\r\n        <div className=\"allTest\">\r\n            <h3 style={{\r\n                fontWeight : \"bold\"\r\n            }}>Выберите тему</h3>\r\n            <div id=\"tests\">{showTheme()}</div>\r\n            <button className={'greeting-button'} style={{\r\n                position: \"fixed\",\r\n                bottom: \"0px\",\r\n                right: \"0px\",\r\n                width: \"40%\"\r\n            }}><Link to={'/'}>На главную</Link></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Testing;","import React from 'react';\r\nimport './Test.css';\r\n\r\nclass Test extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            onClick : false,\r\n            onConfirm : false,\r\n            userAnswer : \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n         for ( var i = this.props.answers.length-1; i>0; i--) {\r\n             var t = this.props.answers[i],\r\n                 j = Math.floor(i*Math.random());\r\n             this.props.answers[i] = this.props.answers[j];\r\n             this.props.answers[j] = t;\r\n         }\r\n     }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        if (this.props.answers !== nextProps.answers) {\r\n            for ( var i = nextProps.answers.length-1; i>0; i--) {\r\n                var t = nextProps.answers[i],\r\n                    j = Math.floor(i*Math.random());\r\n                nextProps.answers[i] = nextProps.answers[j];\r\n                nextProps.answers[j] = t;\r\n            }\r\n        }\r\n        document.getElementById(\"prog\").style.width = \"\" + this.props.length1 + \"%\";\r\n        document.getElementById(\"prog\").setAttribute('data-tooltip', \"\" + Math.round(this.props.length1) + \"%\")\r\n    }\r\n\r\n     showAnswers = () => {\r\n        return this.props.answers.map((item, index) =>  <p key={index} onClick={(elem)=>{this.props.updateData(item)\r\n            var style = document.getElementsByClassName('style1');\r\n            for (var i = 0; i < style.length; i++){\r\n                style[i].classList.remove('style1')\r\n            }\r\n            elem.target.setAttribute(\"class\", \"style1\");\r\n            this.setState({\r\n                                    onClick : true,\r\n                                    onConfirm : true,\r\n                                    userAnswer : item\r\n                                });\r\n        }}><span>{String.fromCharCode(65 + index,41,32)}</span>{item}</p>);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id =\"all-test\">\r\n                <h3>{this.props.question}</h3>\r\n                <div>\r\n                    {this.showAnswers()}\r\n                    { this.state.onClick && !this.state.onConfirm ? <button style={{\r\n                    width: \"100%\"\r\n                }} className={'greeting-button flower'} onClick={() => {\r\n                        this.props.nextTest()\r\n                        var div = document.getElementById(\"all-test\");\r\n                        var elems = div.getElementsByTagName(\"p\");\r\n                        for(let i=0; i<elems.length; i++) {\r\n                            elems[i].style.pointerEvents = 'auto';\r\n                        }\r\n                        var style = document.getElementsByClassName('style1');\r\n                        var style1 = document.getElementsByClassName('style2');\r\n                        for (let i = 0; i < style.length; i++){\r\n                            style[i].classList.remove('style1');\r\n                        }\r\n                        for (let i = 0; i < style1.length; i++){\r\n                            style1[i].classList.remove('style2');\r\n                        }\r\n                        this.setState({onClick : false})\r\n                    }}>Следующий вопрос\r\n                    </button> : this.state.onClick && this.state.onConfirm ? <button style={{\r\n                    width: \"100%\"\r\n                }} className={'greeting-button flower'} onClick={ () => {\r\n                        var style = document.getElementsByClassName('style1');\r\n                        for (var i = 0; i < style.length; i++){\r\n                                if (this.state.userAnswer !== this.props.rightAnswer){\r\n                                        style[i].classList.add('style2');\r\n                                        style[i].classList.remove('style1');\r\n                                }\r\n                        }\r\n                        var div = document.getElementById(\"all-test\");\r\n                        var elems = div.getElementsByTagName(\"p\");\r\n                        for(let i=0; i<elems.length; i++) {\r\n                            elems[i].style.pointerEvents = 'none';\r\n                            if (elems[i].textContent === (String.fromCharCode(65 + i,41,32)) + this.props.rightAnswer){\r\n                                elems[i].setAttribute(\"class\", \"style1\");\r\n                            }\r\n                        }\r\n\r\n                        this.setState({onConfirm : false})\r\n                    }}> Подтвердить выбор </button> : null}\r\n                </div>\r\n                <div className='bar' style={{\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\",\r\n                    right : \"0px\"\r\n                }}>\r\n                    <div id=\"prog\"  className=\"bar-item tooltip\" role=\"progressbar\" data-tooltip=\"50%\" aria-valuemin=\"0\" aria-valuemax=\"100\" >   </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Result.css\";\r\n\r\nexport default function Result(props) {\r\n    var options1 = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    };\r\n    localStorage.setItem('Результат - ' + (localStorage.length + 1), [Math.round((props.sum*100)/props.arrayRightAnswer.length),new Date().toLocaleString(\"ru\", options1),props.theme]);\r\n    var end = new Date();\r\n    end -= props.time;\r\n    var end2 = new Date();\r\n    end2.setTime(-10800000+end);\r\n    var options = {\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    };\r\n    return (\r\n        <div className=\"result\">\r\n            <div className=\"result-wrap\">    \r\n                <p>Вы ответили на {props.sum} {props.sum>=11 && props.sum<=19 ? \"вопросов\" :\r\n                                                (props.sum % 10) === 0 || ((props.sum % 10)>=5 && (props.sum % 10)<=9) ? \"вопросов\" :\r\n                                                    ((props.sum % 10)>=2 && (props.sum % 10)<=4) ? \"вопроса\" : \"вопрос\"} из {props.arrayRightAnswer.length} </p>\r\n                {(props.sum*100)/props.arrayRightAnswer.length > 55.5 ? <p>Поздравляем! Вы успешно сдали тест, и набрали {Math.round((props.sum*100)/props.arrayRightAnswer.length)}%</p> : <p>Вы не справились, и набрали всего {Math.round((props.sum*100)/props.arrayRightAnswer.length)}%.</p>}\r\n                {(props.sum*100)/props.arrayRightAnswer.length > 55.5 ? <img src=\"https://media.giphy.com/media/g9582DNuQppxC/giphy.gif\" width=\"90%\" heigth=\"90%\" alt=\"\"/> :  <img src=\"https://media.giphy.com/media/4GWh1lkk0Lwx0gNOjc/giphy.gif\" width=\"90%\" heigth=\"90%\" alt=\"\"/>}\r\n                <p style={{\r\n                    marginTop : '5px'\r\n                }}>Время прохождения теста: {end2.toLocaleString(\"ru\", options) }</p>\r\n            </div>  \r\n            <button className={'greeting-button'}><Link to={'/testing'}>Выбрать новую тему для тестирования</Link></button>\r\n            <button className={'greeting-button'}><Link to={'/'}>Вернуться на главную</Link></button>\r\n            <button className={'greeting-button flower'} onClick={() => {props.repeatTest()}}>Пройти тест еще раз</button>\r\n            <button className={'greeting-button'}><Link to={'/results'}>Посмотреть результаты</Link></button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport data from '../test.json';\nimport Test from '../test/Test';\nimport Result from '../result/Result';\n\nclass App extends React.Component {\n    constructor(props){\n       super(props);\n\n       this.state = {\n           index : 0,\n           arrayAnswer : [],\n           arrayRightAnswer : [],\n           arrayQuestions : [],\n           userAnswer : \"\",\n           sum : 0,\n           date : null,\n           progress : 0\n       }\n    }\n\n    componentDidMount() {\n        this.setState({date : new Date()});\n        this.setState({progress : (((this.state.index + 1)/this.state.arrayQuestions.length)*100)});\n    }\n\n    componentWillMount(){\n        var questions = data[this.props.match.params.id].questions;\n        for ( var i = questions.length; i-->0;) {\n            var t = questions[i],\n                j = Math.floor(i*Math.random());\n            questions[i] = questions[j];\n            questions[j] = t;\n        }\n        this.setState({arrayQuestions : questions});\n\n    }\n\n    render() {\n        return this.state.index < this.state.arrayQuestions.length ?\n            < Test question={this.state.arrayQuestions[this.state.index].question} answers={this.state.arrayQuestions[this.state.index].answers} rightAnswer={data[this.props.match.params.id].questions[this.state.index].rigthAnswer} length1={this.state.progress} updateData={this.updateData} nextTest={this.nextTest}/> :\n            < Result sum={this.state.sum} arrayRightAnswer={this.state.arrayRightAnswer} time={this.state.date} repeatTest={this.repeatTest} theme={data[this.props.match.params.id].theme}/>;\n    }\n\n    updateData = (value) => {\n        this.setState({userAnswer : value});\n    };\n\n    repeatTest = () => {\n        this.setState({\n                                index : 0,\n                                arrayAnswer : [],\n                                arrayRightAnswer : [],\n                                userAnswer : \"\",\n                                sum : 0,\n                                date : null\n                            })\n        this.setState({progress : ((1/this.state.arrayQuestions.length)*100)})\n        this.setState({date : new Date()})\n    }\n\n    nextTest = () => {\n        this.setState(prevState => ({\n            arrayAnswer: [...prevState.arrayAnswer, this.state.userAnswer.trim()]\n        }));\n        this.setState(prevState => ({\n            arrayRightAnswer: [...prevState.arrayRightAnswer, data[this.props.match.params.id].questions[this.state.index].rigthAnswer.trim()]\n        }));\n        if (this.state.userAnswer === data[this.props.match.params.id].questions[this.state.index].rigthAnswer) this.setState ({sum : this.state.sum + 1})\n        this.setState({index : this.state.index + 1});\n        this.setState({progress : (((this.state.index + 2)/this.state.arrayQuestions.length)*100)})\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport \"./Output.css\";\r\n\r\nexport default function Result(props) {\r\n    return props.result.map((item, index) => {\r\n        var  res = item.split(',');\r\n        console.log(res)\r\n        return(\r\n            <div className=\"results\" key={index}>\r\n                <p>{\"Предмет: \" + res[3]}</p>\r\n                <p>{\"Результат: \" + res[0] + \"%\"}</p>\r\n                <p>{\"Время сдачи: \" + res[1]+res[2]}</p>\r\n                <p style={\r\n                    {\r\n                    width: '100vw',\r\n                    borderBottom:'3px solid #dda0dd'}\r\n                }> </p>\r\n            </div>\r\n        )\r\n    })\r\n}","import React from \"react\";\r\nimport Output from \"../output/Output\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Results.css\"\r\n\r\nclass Results extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            result : [''],\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        var res = [];\r\n        for (let i = localStorage.length; i >= 1; i--){\r\n            res.push(localStorage.getItem('Результат - ' + i));\r\n        }\r\n        this.setState({result : res});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <Output result={this.state.result}/>\r\n                <button className={'greeting-button'} style={{\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\",\r\n                    right: \"0px\",\r\n                    width: \"40%\"\r\n                }}><Link to={'/'}>На главную</Link></button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from '../home/Home.js';\r\nimport Testing from '../testing/Testing';\r\nimport App from '../app/App.js';\r\nimport Results from '../results/Results';\r\n\r\n\r\nconst Root = () => (\r\n        <Router>\r\n            <div id={'router-wrapper'}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component = {Home} />\r\n                    <Route exact path='/testing/:id' component = {App}/>\r\n                    <Route path=\"/testing\" component = {Testing} />\r\n                    <Route path=\"/results\" component = {Results} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n);\r\n\r\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/spectre.css/dist/spectre.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Root from './routing/Root.js';\n\n\nReactDOM.render(< Root/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}