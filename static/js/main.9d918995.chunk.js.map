{"version":3,"sources":["serviceWorker.js","home/Home.js","testing/Testing.js","test/Test.js","result/Result.js","app/App.js","output/Output.js","results/Results.js","routing/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","props","react_default","a","createElement","className","react_router_dom","to","Testing","id","data","map","item","index","key","concat","theme","Test","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showAnswers","answers","onClick","elem","updateData","style","document","getElementsByClassName","i","length","classList","remove","target","setAttribute","setState","onConfirm","userAnswer","String","fromCharCode","state","t","j","Math","floor","random","nextProps","getElementById","width","length1","round","_React$createElement","_this2","question","nextTest","elems","getElementsByTagName","pointerEvents","style1","rightAnswer","add","textContent","position","bottom","tooltip","data-tooltip","role","defineProperty","React","Component","Result","localStorage","setItem","sum","arrayRightAnswer","Date","toLocaleString","year","month","day","hour","minute","second","end","time","end2","setTime","repeatTest","App","value","arrayAnswer","date","prevState","toConsumableArray","params","questions","rigthAnswer","progress","arrayQuestions","console","log","src_test_Test","result","res","split","borderBottom","Results","push","getItem","Output_Result","right","Root","react_router","exact","path","component","ReactDOM","render","routing_Root","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d918995.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. app is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <div className=\"Home-page\">\r\n            <button className={'greeting-button'}><Link to={'/testing'} >Начать проходить тесты!</Link></button>\r\n            <button className={'greeting-button'}><Link to={'/results'} >Посмотреть свои результаты</Link></button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport data from '../test.json';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Testing.css';\r\nconst Testing = () => {\r\n    const showTheme = () => {\r\n        return data.map((item, index) => {\r\n            return  <Link key={index} to={`/testing/${index}`}>{item.theme}</Link>;\r\n        })\r\n    };\r\n\r\n    return(\r\n        <div className=\"allTest\">\r\n            <p>Выберите тему</p>\r\n            <div id=\"tests\">{showTheme()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Testing;","import React from 'react';\r\nimport './Test.css';\r\n\r\nclass Test extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            onClick : false,\r\n            onConfirm : false,\r\n            userAnswer : \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n         for ( var i = this.props.answers.length-1; i>0; i--) {\r\n             var t = this.props.answers[i],\r\n                 j = Math.floor(i*Math.random());\r\n             this.props.answers[i] = this.props.answers[j];\r\n             this.props.answers[j] = t;\r\n         }\r\n     }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        if (this.props.answers !== nextProps.answers) {\r\n            for ( var i = nextProps.answers.length-1; i>0; i--) {\r\n                var t = nextProps.answers[i],\r\n                    j = Math.floor(i*Math.random());\r\n                nextProps.answers[i] = nextProps.answers[j];\r\n                nextProps.answers[j] = t;\r\n            }\r\n        }\r\n        document.getElementById(\"prog\").style.width = \"\" + this.props.length1 + \"%\";\r\n        document.getElementById(\"prog\").setAttribute('data-tooltip', \"\" + Math.round(this.props.length1) + \"%\")\r\n    }\r\n\r\n     showAnswers = () => {\r\n        return this.props.answers.map((item, index) =>  <p key={index} onClick={(elem)=>{this.props.updateData(item)\r\n            var style = document.getElementsByClassName('style1');\r\n            for (var i = 0; i < style.length; i++){\r\n                style[i].classList.remove('style1')\r\n            }\r\n            elem.target.setAttribute(\"class\", \"style1\");\r\n            this.setState({\r\n                                    onClick : true,\r\n                                    onConfirm : true,\r\n                                    userAnswer : item\r\n                                });\r\n        }}><span>{String.fromCharCode(65 + index,41,32)}</span>{item}</p>);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id =\"all-test\">\r\n                <h3>{this.props.question}</h3>\r\n                <div>\r\n                    {this.showAnswers()}\r\n                    { this.state.onClick && !this.state.onConfirm ? <button onClick={() => {\r\n                        this.props.nextTest()\r\n                        var div = document.getElementById(\"all-test\");\r\n                        var elems = div.getElementsByTagName(\"p\");\r\n                        for(let i=0; i<elems.length; i++) {\r\n                            elems[i].style.pointerEvents = 'auto';\r\n                        }\r\n                        var style = document.getElementsByClassName('style1');\r\n                        var style1 = document.getElementsByClassName('style2');\r\n                        for (let i = 0; i < style.length; i++){\r\n                            style[i].classList.remove('style1');\r\n                        }\r\n                        for (let i = 0; i < style1.length; i++){\r\n                            style1[i].classList.remove('style2');\r\n                        }\r\n                        this.setState({onClick : false})\r\n                    }}>Следующий вопрос\r\n                    </button> : this.state.onClick && this.state.onConfirm ? <button onClick={ () => {\r\n                        var style = document.getElementsByClassName('style1');\r\n                        for (var i = 0; i < style.length; i++){\r\n                                if (this.state.userAnswer !== this.props.rightAnswer){\r\n                                        style[i].classList.add('style2');\r\n                                        style[i].classList.remove('style1');\r\n                                }\r\n                        }\r\n                        var div = document.getElementById(\"all-test\");\r\n                        var elems = div.getElementsByTagName(\"p\");\r\n                        for(let i=0; i<elems.length; i++) {\r\n                            elems[i].style.pointerEvents = 'none';\r\n                            if (elems[i].textContent === (String.fromCharCode(65 + i,41,32)) + this.props.rightAnswer){\r\n                                elems[i].setAttribute(\"class\", \"style1\");\r\n                            }\r\n                        }\r\n\r\n                        this.setState({onConfirm : false})\r\n                    }}> Подтвердить выбор </button> : null}\r\n                </div>\r\n                <div className='bar' style={{\r\n                    position: \"fixed\",\r\n                    bottom: \"20px\"\r\n                }}>\r\n                    <div id=\"prog\" tooltip data-tooltip=\"Lorem ipsum dolor sit amet\" className=\"bar-item tooltip\" role=\"progressbar\" data-tooltip=\"50%\" aria-valuemin=\"0\" aria-valuemax=\"100\" >   </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Result(props) {\r\n    var options1 = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    };\r\n    localStorage.setItem('Результат - ' + (localStorage.length + 1), [Math.round((props.sum*100)/props.arrayRightAnswer.length),new Date().toLocaleString(\"ru\", options1),props.theme]);\r\n    var end = new Date();\r\n    end -= props.time;\r\n    var end2 = new Date();\r\n    end2.setTime(-10800000+end);\r\n    var options = {\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    };\r\n    return (\r\n        <div className=\"result\">\r\n            <p>Вы ответили на {props.sum} {props.sum>=11 && props.sum<=19 ? \"вопросов\" :\r\n                                              (props.sum % 10) === 0 || ((props.sum % 10)>=5 && (props.sum % 10)<=9) ? \"вопросов\" :\r\n                                                  ((props.sum % 10)>=2 && (props.sum % 10)<=4) ? \"вопроса\" : \"вопрос\"} из {props.arrayRightAnswer.length} </p>\r\n            {(props.sum*100)/props.arrayRightAnswer.length > 55.5 ? <p>Поздравляем! Вы успешно сдали тест, и набрали {Math.round((props.sum*100)/props.arrayRightAnswer.length)}%</p> : <p>Вы не справились, и набрали всего {Math.round((props.sum*100)/props.arrayRightAnswer.length)}%.</p>}\r\n            <p>Время прохождения теста: {end2.toLocaleString(\"ru\", options) }</p>\r\n            <button><Link to={'/testing'} className={'greeting-button'}>Выбрать новую тему для тестирования</Link></button>\r\n            <button><Link to={'/'} className={'greeting-button'}>Вернуться на главную</Link></button>\r\n            <button onClick={() => {props.repeatTest()}}>Пройти тест еще раз</button>\r\n            <button><Link to={'/results'} className={'greeting-button'}>Посмотреть результаты</Link></button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport data from '../test.json';\nimport Test from '../test/Test';\nimport Result from '../result/Result';\n\nclass App extends React.Component {\n    constructor(props){\n       super(props);\n\n       this.state = {\n           index : 0,\n           arrayAnswer : [],\n           arrayRightAnswer : [],\n           arrayQuestions : [],\n           userAnswer : \"\",\n           sum : 0,\n           date : null,\n           progress : 0\n       }\n    }\n\n    componentDidMount() {\n        this.setState({date : new Date()});\n        this.setState({progress : (((this.state.index + 1)/this.state.arrayQuestions.length)*100)});\n        console.log(this.props.match)\n    }\n\n    componentWillMount(){\n        var questions = data[this.props.match.params.id].questions;\n        for ( var i = questions.length; i-->0;) {\n            var t = questions[i],\n                j = Math.floor(i*Math.random());\n            questions[i] = questions[j];\n            questions[j] = t;\n        }\n        this.setState({arrayQuestions : questions});\n\n    }\n\n    render() {\n        return this.state.index < this.state.arrayQuestions.length ?\n            < Test question={this.state.arrayQuestions[this.state.index].question} answers={this.state.arrayQuestions[this.state.index].answers} rightAnswer={data[this.props.match.params.id].questions[this.state.index].rigthAnswer} length1={this.state.progress} updateData={this.updateData} nextTest={this.nextTest}/> :\n            < Result sum={this.state.sum} arrayRightAnswer={this.state.arrayRightAnswer} time={this.state.date} repeatTest={this.repeatTest} theme={data[this.props.match.params.id].theme}/>;\n    }\n\n    updateData = (value) => {\n        this.setState({userAnswer : value});\n    };\n\n    repeatTest = () => {\n        this.setState({\n                                index : 0,\n                                arrayAnswer : [],\n                                arrayRightAnswer : [],\n                                userAnswer : \"\",\n                                sum : 0,\n                                date : null\n                            })\n        this.setState({date : new Date()})\n    }\n\n    nextTest = () => {\n        this.setState(prevState => ({\n            arrayAnswer: [...prevState.arrayAnswer, this.state.userAnswer]\n        }));\n        this.setState(prevState => ({\n            arrayRightAnswer: [...prevState.arrayRightAnswer, data[this.props.match.params.id].questions[this.state.index].rigthAnswer]\n        }));\n        if (this.state.userAnswer === data[this.props.match.params.id].questions[this.state.index].rigthAnswer) this.setState ({sum : this.state.sum + 1})\n        this.setState({index : this.state.index + 1});\n        this.setState({progress : (((this.state.index + 2)/this.state.arrayQuestions.length)*100)})\n    }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nexport default function Result(props) {\r\n    return props.result.map((item, index) => {\r\n        var  res = item.split(',');\r\n        console.log(res)\r\n        return(\r\n            <div className=\"result\" key={index}>\r\n                <p>{res[3]}</p>\r\n                <p>{res[0]}</p>\r\n                <p>{res[1]+res[2]}</p>\r\n                <p style={\r\n                    {\r\n                    width: '100%',\r\n                    borderBottom:'1px solid black'}\r\n                }> </p>\r\n            </div>\r\n        )\r\n    })\r\n}","import React from \"react\";\r\nimport Output from \"../output/Output\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Results extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            result : [''],\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        var res = [];\r\n        for (let i = localStorage.length; i >= 1; i--){\r\n            res.push(localStorage.getItem('Результат - ' + i));\r\n        }\r\n        this.setState({result : res});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <Output result={this.state.result}/>\r\n                <button style={{\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\",\r\n                    right: \"0px\"\r\n                }}><Link to={'/'}>На главную</Link></button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from '../home/Home.js';\r\nimport Testing from '../testing/Testing';\r\nimport App from '../app/App.js';\r\nimport Results from '../results/Results';\r\n\r\n\r\nconst Root = () => (\r\n        <Router>\r\n            <div id={'router-wrapper'}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component = {Home} />\r\n                    <Route exact path='/testing/:id' component = {App}/>\r\n                    <Route path=\"/testing\" component = {Testing} />\r\n                    <Route path=\"/results\" component = {Results} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n);\r\n\r\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/spectre.css/dist/spectre.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Root from './routing/Root.js';\n\n\nReactDOM.render(< Root/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}